### Once you have an assembled genome...

## Generate a configuration file with details about paths and grid engine queues

#############################
## 0) Configuration file ####
#############################

perl ./Functional_Genome_Annotation/scripts/generate_config.pl [previous configuration file]
source environment.sh ## load environment variables 

############################
## 1) Quality Metrics	####
############################

perl ./Functional_Genome_Annotation/scripts/calling_Assembly-STATS-BUSCO.pl -genome genome.fasta -cpu $CPUS -config configuration_file.txt -busco_db /path/to/BUSCO_db1 [-busco_db /path/to/BUSCO_db2] [-sp augustus_species]

##############################
## 2) Repeat Identification ##
##############################

perl ./Functional_Genome_Annotation/scripts/repeat_Identification.pl -file genome.fasta -cpu $CPUs -config configuration_file.txt

### Get Evidences and Annotate

################################
## 3) Get Tophat junctions	####
################################

tophat â€“p $CPUS genome.fasta RNAseq-reads_R1.fastq RNAseq-reads_R2.fastq
## Output: get bam and junctions bed file

## convert into gff3 format file using tophat2gff3 (under maker/bin/)
tophat2gff3 tophat_output_junctions.bed

####################################
## 4) Ab Initio gene prediction	####
####################################

## run ab initio prediction
perl ./Functional_Genome_Annotation/scripts/augustus_threads.pl -file genome.fasta -cpu $CPUs -config configuration_file.txt [-hints hints_file -sp augustus_species]

####################
## 5) BRAKER	####
####################
## 
perl ./braker.pl --genome=genome.fasta --bam=filtered.sort.bam --GENEMARK_PATH=./gmes_petap/ --BAMTOOLS_PATH=./bamtools_path/ --SAMTOOLS_PATH=./samtools --AUGUSTUS_CONFIG_PATH=./augustus-3.1/bin/ --UTR on --species=name --cores $CPUS --gff3 --workingdir=dirname

## Output: Gene predictions by GeneMark, GeneMark trained, Augustus trained

#####################
## 6) Train SNAP   ##
#####################
## Use maker to train SNAP

- Run maker: (Step 7) set est2genome=1 and/or protein2genome=1 in control files
- Once maker annotation gff file is generated:
- Train SNAP

./Functional_Genome_Annotation/scripts/SNAP_train.sh maker.gff output_tag output_name_file.hmm

Repeat step up to 3 times.

##################
## 7) MAKER		##
##################

## generate control files
maker -CTL

## set est2genome=0/protein2genome=0
## set rmlib=repeats.lib (Step 2)
## set augustus_species option
## set pred_gff = ab initio gff (Step 4)
## include proteins, mRNA, other proteins, junctions.gff file (Step 3)
## set CPU=2
## set genemark hmm models if trained (Step 5)
## set genemark augustus models if trained (Step 5)
## set snaphmm=output_name_file.hmm (Step 6)

perl ./Functional_Genome_Annotation/scripts/maker_threads_call.pl -file genome.fasta -cpu $CPUs -config configuration_file.txt -name NAME







